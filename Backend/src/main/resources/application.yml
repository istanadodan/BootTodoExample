spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3336/mydb?serverTimezone=UTC&characterEncoding=utf8
    username: root
    password: verysecret
  application:
    name: ksd-sto
  security:
    user:
      name: user
      password: pass
  web:
    resources:
      static-locations:
      - classpath:/public/
      cache:
        period: 3600
  mvc.async.request-timeout: 60000
    
#  jpa:
#    hibernate:
#      ddl-auto: update
#    database-platform: org.hibernate.dialect.MariaDBDialect

######################
### Mybatis
#####################
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: ksd.sto.ndm.dao
  configuration:
    map-underscore-to-camel-case: true

jwt:
  secret: ksd-sto-mgr-ndmksd-sto-mgr-ndmksd-sto-mgr-ndm
  token-validity-in-seconds: 86400

#########################
## logging
########################
logging:
  level:
    root: INFO
    org.mybatis: INFO
    ksd.sto.ndm: INFO
  jdbc:
    sqlonly: DEBUG
  file:
    name: /logs/application.log  # 로그 파일 이름 지정
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"  # 콘솔 출력 패턴
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"    # 파일 출력 패턴
  logback:
    rollingpolicy:
      fileNamePattern: "application-%d{yyyy-MM-dd}.log"  # 롤링 로그 파일 패턴
      maxHistory: 30  # 로그 보관 일수  

server:
  port: 8082
  servlet:
    context-path: /
    session:
      timeout: 30m
    encoding:
      charset: UTF-8
      force: true

###################
### swagger 설정
###################
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    tags-sorter: alpha
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    default-model-expand-depth: 2
    default-models-expand-depth: 2
    doc-expansion: None
  show-actuator: true
  show-spring-cloud-functions: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  writer-with-default-pretty-printer: true
  model-and-view-allowed: true
  paths-to-match:
    - /**

monitoring:
  apiKey: test
  grafanaUrl: http://localhost:3000/api
  prometheusUrl: http://localhost:9090/api/v1/query
  
#################
## Actuator
#################
#management:
#  endpoints:
#    web:
#      base-path: /actuator      
#      exposure:
#        include: health,info,metrics,prometheus
#        #include: "*"
#  metrics:    
#    tags:
#      application: ${spring.application.name}    # 서비스 단위의 식별자. Prometheus label에 추가됨.
##    export:
##      prometheus:
##        enabled: true
##            
#  prometheus:
#    metrics:
#      export:
#        enabled: true