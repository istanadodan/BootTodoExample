apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: helloworld-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: helloworld
spec:
  hosts:
  - "*"
  gateways:
  - helloworld-gateway
  http:
  - match:
    - uri:
        exact: /hello
    route:
    - destination:
        host: helloworld
        port:
          number: 5000
  - match:
    - uri:
        prefix: /mydb
    route:
    - destination:
        host: database
        port:
          number: 3306
  - match:
    - uri:
        exact: /
    - uri:
        prefix: /static
    route:
    - destination:
        host: frontend
        port:
          number: 3000
  - match:
    - uri:
        prefix: /backend/
    rewrite:
        uri: /demo/
    route:
    - destination:
        host: backend
        port:
          number: 8080
# ---
# apiVersion: networking.istio.io/v1alpha3
# kind: DestinationRule
# metadata:
#   name: mysql-client
# spec:
#   host: database
#   trafficPolicy:
#     tls:
#       mode: ISTIO_MUTUAL
#     portLevelSettings:
#     - port:
#         number: 3306
#       tls:
#         mode: DISABLE
# ---
# apiVersion: security.istio.io/v1beta1
# kind: PeerAuthentication
# metadata:
#   name: default
#   namespace: istio-system
# spec:
#   mtls:
#     mode: PERMISSIVE
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: mysql-network-policy
#   namespace: default
# spec:
#   podSelector:
#     matchLabels:
#       app: mysql
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     - ipBlock:
#         cidr: 0.0.0.0/0
#     ports:
#     - protocol: TCP
#       port: 3306